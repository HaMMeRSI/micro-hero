version: '3.8'
services:

  localstack:
    image: localstack/localstack:latest
    container_name: localstack
    ports:
      - '4563-4599:4563-4599'
      - '8055:8080'
    environment:
      - SERVICES=s3,sns
      - DEBUG=0
    volumes:
      - '/var/run/docker.sock:/var/run/docker.sock'
    networks:
      - micro-hero
    healthcheck:
      test: awslocal --version
      interval: 10s
      timeout: 10s
    restart: always

  visit:
    image: micro-hero/visit
    build: ./services/visit
    container_name: visit
    environment:
      - AWS_ENDPOINT=http://localstack:4566
      - AWS_ACCESS_KEY_ID=test
      - AWS_SECRET_ACCESS_KEY=test
      - AWS_DEFAULT_REGION=us-east-1
      - SNS_TOPIC_ARN=arn:aws:sns:us-east-1:000000000000:visit
    depends_on:
      localstack:
        condition: service_healthy
      recognize:
        condition: service_started
      upload:
        condition: service_started
      detect:
        condition: service_started
    networks:
      - micro-hero
    logging:
      driver: local

  upload:
    image: micro-hero/upload
    build: ./services/upload
    container_name: upload
    environment:
      - AWS_ENDPOINT=http://localstack:4566
      - AWS_ACCESS_KEY_ID=test
      - AWS_SECRET_ACCESS_KEY=test
      - AWS_DEFAULT_REGION=us-east-1
      - SNS_TOPIC_ARN=arn:aws:sns:us-east-1:000000000000:visit
    depends_on:
      localstack:
        condition: service_healthy
    networks:
      - micro-hero
    logging:
      driver: local

  detect:
    image: micro-hero/detect
    build: ./services/detect
    container_name: detect
    environment:
      - AWS_ENDPOINT=http://localstack:4566
      - AWS_ACCESS_KEY_ID=test
      - AWS_SECRET_ACCESS_KEY=test
      - AWS_DEFAULT_REGION=us-east-1
      - SNS_TOPIC_ARN=arn:aws:sns:us-east-1:000000000000:visit
    depends_on:
      localstack:
        condition: service_healthy
    networks:
      - micro-hero
    logging:
      driver: local

  recognize:
    image: micro-hero/recognize
    build: ./services/recognize
    container_name: recognize
    ports:
      - '5000:5000'
    environment:
      - BATMAN_IMG=/usr/src/app/batman.jpg
      - AWS_ENDPOINT=http://localstack:4566
      - AWS_ACCESS_KEY_ID=test
      - AWS_SECRET_ACCESS_KEY=test
      - AWS_DEFAULT_REGION=us-east-1
      - SNS_TOPIC_ARN=arn:aws:sns:us-east-1:000000000000:visit
      - RECOGNIZE_ENDPOINT=http://recognize:5000/sns
    depends_on:
      localstack:
        condition: service_healthy
    networks:
      - micro-hero
    logging:
      driver: local

networks:
  micro-hero:
    driver: bridge